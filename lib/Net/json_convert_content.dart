// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.

import 'package:note_flutter/Model/note_model.dart';
import 'package:note_flutter/Model/notebook_model.dart';

class JsonConvert<T> {
  T fromJson(Map<String, dynamic> json) {
    return _getFromJson<T>(runtimeType, this, json);
  }

  // Map<String, dynamic> toJson() {
  //   return _getToJson<T>(runtimeType, this);
  // }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {
      // case UniversityDetailModel:
      //   return UniversityDetailModel.fromJson(json) as T;

    }
    return data as T;
  }

  // static _getToJson<T>(Type type, data) {
  //   switch (type) {
  //     case UniversityDetailModel:
  //       return UniversityDetailModel(data as UniversityDetailModel);
  //   }
  //   return data as T;
  // }

  //Go back to a single instance by type
  // static M _fromJsonSingle<M>(json) {
  //   print("show---net->$json");
  //
  // }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {
      // case 'UniversityDetailModel':
      //   return List<UniversityDetailModel>();
      // case 'Data':
      //   return List<Data>();
    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    switch (M) {
      case NotebookModel:
        return NotebookModel.fromJson(json) as M;
        return json;
      case NoteModel:
        return NoteModel.fromJson(json) as M;
        return json;
    }

    return json;
    //return _fromJsonSingle<M>(json) as M;
    // if (json is List && type.contains("List<")) {
    //   String itemType = type.substring(5, type.length - 1);
    //   List tempList = _getListFromType(itemType);
    //   json.forEach((itemJson) {
    //     tempList
    //         .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
    //   });
    //   return tempList as M;
    // } else {
    //
    // }
  }
}
